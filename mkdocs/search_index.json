{
    "docs": [
        {
            "location": "/", 
            "text": "What is tumugi ?\n\n\nTumugi is a ruby library to build, run and manage complex workflows. Tumugi enables you to define workflows as a ruby code.\n\n\nTumugi has following features:\n\n\n\n\nDefine workflows using DSL and ruby code\n\n\nScheduling task from the given dependencies\n\n\nParallel task execution\n\n\nError handling and retry\n\n\nSmall core and enhance menbe by plugins released on RubyGems.org\n\n\n\n\n\n\n\nTumugi is very inspired by \nLuigi\n written by Python.\n\n\nReleases\n\n\nYou can find releases in \nRubyGems.org\n, and can see changelogs \nhere\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#what-is-tumugi", 
            "text": "Tumugi is a ruby library to build, run and manage complex workflows. Tumugi enables you to define workflows as a ruby code.  Tumugi has following features:   Define workflows using DSL and ruby code  Scheduling task from the given dependencies  Parallel task execution  Error handling and retry  Small core and enhance menbe by plugins released on RubyGems.org    Tumugi is very inspired by  Luigi  written by Python.", 
            "title": "What is tumugi ?"
        }, 
        {
            "location": "/#releases", 
            "text": "You can find releases in  RubyGems.org , and can see changelogs  here .", 
            "title": "Releases"
        }, 
        {
            "location": "/recipe1/", 
            "text": "Your first tumugi workflow\n\n\nThis guide explain about how to write a workflow doing following tasks by tumugi.\n\n\n\n\nDownload archived daily access logs from remote servers using \nwget\n command\n\n\nCount number of rows group by URI and save result into CSV file\n\n\n\n\nThis guide assumes you are using Unix like OS, such as Ubuntu, CentOS, or Mac OS X.\n\n\nPrerequisities\n\n\n\n\nRuby 2.1 or later\n\n\nBundler\n\n\ngraphviz\n\n\n\n\nInstallation\n\n\nCreate \nGemfile\n and write following contents:\n\n\nsource 'https://rubygems.org'\n\ngem 'tumugi', '~\n 0.4.5'\ngem 'tumugi-plugin-command', '~\n 0.1.0'\n\n\n\n\nAnd then execute:\n\n\n$ bundle install\n\n\n\n\nDefine workflow by tumugi DSL\n\n\nYou can define workflow above using tumugi DSL.\n\n\nrequire 'ltsv'\nrequire 'zip'\n\n####################################################\n# 1. Archived log download\n####################################################\n\ntask :download_log, type: :command do\n  param :host, default: 'https://tumugi.github.io'\n  param :log_filename, type: :string\n  param :day, type: :time # \n= This value is auto binding from CLI parameter\n\n  param_set :log_filename, -\n {\n    \naccess_#{day.strftime('%Y%m%d')}.log.zip\n\n  }\n  param_set :command, -\n {\n    url = \n#{host}/data/#{log_filename}\n\n    \nwget #{url} -O #{output.path}\n\n  }\n\n  output {\n    target(:local_file, \n/tmp/#{log_filename}\n)\n  }\nend\n\n####################################################\n# 2. Count rows group by URI\n####################################################\n\ntask :count_rows_group_by_uri do\n  requires :download_log\n  output target(:local_file, '/tmp/result.csv')\n  run {\n    counts = {}\n    Zip::File.open(input.path) do |zip_file|\n      zip_file.each do |entry|\n        entry.get_input_stream.each do |line|\n          values = LTSV.parse(line).first\n          counts[values[:uri]] ||= 0\n          counts[values[:uri]] += 1\n        end\n      end\n    end\n    output.open('w') do |o|\n      counts.each do |k, v|\n        o.puts \n#{k},#{v}\n\n      end\n    end\n  }\nend\n\n####################################################\n# Root Task\n####################################################\n\ntask :main do\n  requires :count_rows_group_by_uri\n  run {\n    log File.read(input.path)\n  }\nend\n\n\n\n\nSave this code as \nrecipe1.rb\n, then check this workflow.\nTumugi provides DAG (Directed Acyclic Graph) of workflow visualize feature.\n\nshow\n command can visualize DAG (Directed Acyclic Graph) of workflow like:\n\n\n$ bundle exec tumugi show -f recipe1.rb -p day:2016-05-02 -o recipe1.png main\n\n\n\n\n\n\nCheck visualized workflow and it's OK, you can run it.\n\n\n$ bundle exec tumugi run -f recipe1.rb -p day:2016-05-02 main\n\n\n\n\nThen you can get result like this:\n\n\nI, [2016-05-24T01:09:49.243359 #59676]  INFO -- : Parameters: {\nday\n=\n2016-05-02\n}\nI, [2016-05-24T01:09:49.274092 #59676]  INFO -- : start: download_log\nI, [2016-05-24T01:09:49.274243 #59676]  INFO -- : run: download_log\nI, [2016-05-24T01:09:49.274368 #59676]  INFO -- : Execute command: wget https://tumugi.github.io/data/access_20160502.log.zip -O /tmp/access_20160502.log.zip -q\nI, [2016-05-24T01:09:49.285433 #59676]  INFO -- : completed: download_log\nI, [2016-05-24T01:09:49.285554 #59676]  INFO -- : start: count_group_by_uri\nI, [2016-05-24T01:09:49.285668 #59676]  INFO -- : run: count_group_by_uri\nI, [2016-05-24T01:09:50.807095 #59676]  INFO -- : completed: count_group_by_uri\nI, [2016-05-24T01:09:50.807156 #59676]  INFO -- : start: main\nI, [2016-05-24T01:09:50.807206 #59676]  INFO -- : run: main\nI, [2016-05-24T01:09:50.813139 #59676]  INFO -- : /api/v1/messages,7150\n/api/v1/textdata,7373\n/api/v1/people,7377\n\nI, [2016-05-24T01:09:50.813196 #59676]  INFO -- : completed: main\nI, [2016-05-24T01:09:50.815432 #59676]  INFO -- : Result report:\n+--------------------+--------------------+-------------------------------------------------------------------------------------------------------+-----------+\n| Task               | Requires           | Parameters                                                                                            | State     |\n+--------------------+--------------------+-------------------------------------------------------------------------------------------------------+-----------+\n| main               | count_group_by_uri |                                                                                                       | completed |\n| count_group_by_uri | download_log       |                                                                                                       | completed |\n| download_log       |                    | host=https://tumugi.github.io                                                                         | completed |\n|                    |                    | day=2016-05-02 00:00:00 +0900                                                                         |           |\n|                    |                    | log_filename=access_20160502.log.zip                                                                  |           |\n|                    |                    | command=wget https://tumugi.github.io/data/access_20160502.log.zip -O /tmp/access_20160502.log.zip -q |           |\n|                    |                    | output_file=                                                                                          |           |\n+--------------------+--------------------+-------------------------------------------------------------------------------------------------------+-----------+", 
            "title": "Recipe1 - Getting Started"
        }, 
        {
            "location": "/recipe1/#your-first-tumugi-workflow", 
            "text": "This guide explain about how to write a workflow doing following tasks by tumugi.   Download archived daily access logs from remote servers using  wget  command  Count number of rows group by URI and save result into CSV file   This guide assumes you are using Unix like OS, such as Ubuntu, CentOS, or Mac OS X.", 
            "title": "Your first tumugi workflow"
        }, 
        {
            "location": "/recipe1/#prerequisities", 
            "text": "Ruby 2.1 or later  Bundler  graphviz", 
            "title": "Prerequisities"
        }, 
        {
            "location": "/recipe1/#installation", 
            "text": "Create  Gemfile  and write following contents:  source 'https://rubygems.org'\n\ngem 'tumugi', '~  0.4.5'\ngem 'tumugi-plugin-command', '~  0.1.0'  And then execute:  $ bundle install", 
            "title": "Installation"
        }, 
        {
            "location": "/recipe1/#define-workflow-by-tumugi-dsl", 
            "text": "You can define workflow above using tumugi DSL.  require 'ltsv'\nrequire 'zip'\n\n####################################################\n# 1. Archived log download\n####################################################\n\ntask :download_log, type: :command do\n  param :host, default: 'https://tumugi.github.io'\n  param :log_filename, type: :string\n  param :day, type: :time #  = This value is auto binding from CLI parameter\n\n  param_set :log_filename, -  {\n     access_#{day.strftime('%Y%m%d')}.log.zip \n  }\n  param_set :command, -  {\n    url =  #{host}/data/#{log_filename} \n     wget #{url} -O #{output.path} \n  }\n\n  output {\n    target(:local_file,  /tmp/#{log_filename} )\n  }\nend\n\n####################################################\n# 2. Count rows group by URI\n####################################################\n\ntask :count_rows_group_by_uri do\n  requires :download_log\n  output target(:local_file, '/tmp/result.csv')\n  run {\n    counts = {}\n    Zip::File.open(input.path) do |zip_file|\n      zip_file.each do |entry|\n        entry.get_input_stream.each do |line|\n          values = LTSV.parse(line).first\n          counts[values[:uri]] ||= 0\n          counts[values[:uri]] += 1\n        end\n      end\n    end\n    output.open('w') do |o|\n      counts.each do |k, v|\n        o.puts  #{k},#{v} \n      end\n    end\n  }\nend\n\n####################################################\n# Root Task\n####################################################\n\ntask :main do\n  requires :count_rows_group_by_uri\n  run {\n    log File.read(input.path)\n  }\nend  Save this code as  recipe1.rb , then check this workflow.\nTumugi provides DAG (Directed Acyclic Graph) of workflow visualize feature. show  command can visualize DAG (Directed Acyclic Graph) of workflow like:  $ bundle exec tumugi show -f recipe1.rb -p day:2016-05-02 -o recipe1.png main   Check visualized workflow and it's OK, you can run it.  $ bundle exec tumugi run -f recipe1.rb -p day:2016-05-02 main  Then you can get result like this:  I, [2016-05-24T01:09:49.243359 #59676]  INFO -- : Parameters: { day = 2016-05-02 }\nI, [2016-05-24T01:09:49.274092 #59676]  INFO -- : start: download_log\nI, [2016-05-24T01:09:49.274243 #59676]  INFO -- : run: download_log\nI, [2016-05-24T01:09:49.274368 #59676]  INFO -- : Execute command: wget https://tumugi.github.io/data/access_20160502.log.zip -O /tmp/access_20160502.log.zip -q\nI, [2016-05-24T01:09:49.285433 #59676]  INFO -- : completed: download_log\nI, [2016-05-24T01:09:49.285554 #59676]  INFO -- : start: count_group_by_uri\nI, [2016-05-24T01:09:49.285668 #59676]  INFO -- : run: count_group_by_uri\nI, [2016-05-24T01:09:50.807095 #59676]  INFO -- : completed: count_group_by_uri\nI, [2016-05-24T01:09:50.807156 #59676]  INFO -- : start: main\nI, [2016-05-24T01:09:50.807206 #59676]  INFO -- : run: main\nI, [2016-05-24T01:09:50.813139 #59676]  INFO -- : /api/v1/messages,7150\n/api/v1/textdata,7373\n/api/v1/people,7377\n\nI, [2016-05-24T01:09:50.813196 #59676]  INFO -- : completed: main\nI, [2016-05-24T01:09:50.815432 #59676]  INFO -- : Result report:\n+--------------------+--------------------+-------------------------------------------------------------------------------------------------------+-----------+\n| Task               | Requires           | Parameters                                                                                            | State     |\n+--------------------+--------------------+-------------------------------------------------------------------------------------------------------+-----------+\n| main               | count_group_by_uri |                                                                                                       | completed |\n| count_group_by_uri | download_log       |                                                                                                       | completed |\n| download_log       |                    | host=https://tumugi.github.io                                                                         | completed |\n|                    |                    | day=2016-05-02 00:00:00 +0900                                                                         |           |\n|                    |                    | log_filename=access_20160502.log.zip                                                                  |           |\n|                    |                    | command=wget https://tumugi.github.io/data/access_20160502.log.zip -O /tmp/access_20160502.log.zip -q |           |\n|                    |                    | output_file=                                                                                          |           |\n+--------------------+--------------------+-------------------------------------------------------------------------------------------------------+-----------+", 
            "title": "Define workflow by tumugi DSL"
        }
    ]
}