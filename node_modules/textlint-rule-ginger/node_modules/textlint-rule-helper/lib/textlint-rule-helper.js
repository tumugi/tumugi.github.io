// LICENSE : MIT
"use strict";
/**
 * RuleHelper is helper class for textlint.
 * @class RuleHelper
 */
Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RuleHelper = (function () {
    /**
     * Initialize RuleHelper with RuleContext object.
     * @param {RuleContext} ruleContext the ruleContext is context object of the rule.
     */

    function RuleHelper(ruleContext) {
        _classCallCheck(this, RuleHelper);

        this.ruleContext = ruleContext;
    }

    /**
     * Get parents of node.
     * The parent nodes are returned in order from the closest parent to the outer ones.
     * {@link node} is not contained in the results.
     * @param {TxtNode} node the node is start point.
     * @returns {TxtNode[]}
     */

    _createClass(RuleHelper, [{
        key: "getParents",
        value: function getParents(node) {
            var result = [];
            var parent = node.parent;
            while (parent != null) {
                result.push(parent);
                parent = parent.parent;
            }
            return result;
        }

        /**
         * Return true if `node` is wrapped any one of node {@link types}.
         * @param {TxtNode} node is target node
         * @param {string[]} types are wrapped target node
         * @returns {boolean}
         */
    }, {
        key: "isChildNode",
        value: function isChildNode(node, types) {
            var parents = this.getParents(node);
            var parentsTypes = parents.map(function (parent) {
                return parent.type;
            });
            return types.some(function (type) {
                return parentsTypes.some(function (parentType) {
                    return parentType === type;
                });
            });
        }
    }]);

    return RuleHelper;
})();

exports.RuleHelper = RuleHelper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90ZXh0bGludC1ydWxlLWhlbHBlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsWUFBWSxDQUFDOzs7Ozs7Ozs7Ozs7O0lBS0EsVUFBVTs7Ozs7O0FBS1IsYUFMRixVQUFVLENBS1AsV0FBVyxFQUFFOzhCQUxoQixVQUFVOztBQU1mLFlBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO0tBQ2xDOzs7Ozs7Ozs7O2lCQVBRLFVBQVU7O2VBZ0JULG9CQUFDLElBQUksRUFBRTtBQUNiLGdCQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7QUFDaEIsZ0JBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7QUFDekIsbUJBQU8sTUFBTSxJQUFJLElBQUksRUFBRTtBQUNuQixzQkFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNwQixzQkFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7YUFDMUI7QUFDRCxtQkFBTyxNQUFNLENBQUM7U0FDakI7Ozs7Ozs7Ozs7ZUFRVSxxQkFBQyxJQUFJLEVBQUUsS0FBSyxFQUFFO0FBQ3JCLGdCQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3BDLGdCQUFJLFlBQVksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsTUFBTSxFQUFFO0FBQzdDLHVCQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUM7YUFDdEIsQ0FBQyxDQUFDO0FBQ0gsbUJBQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksRUFBRTtBQUM5Qix1QkFBTyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQVUsVUFBVSxFQUFFO0FBQzNDLDJCQUFPLFVBQVUsS0FBSyxJQUFJLENBQUM7aUJBQzlCLENBQUMsQ0FBQzthQUNOLENBQUMsQ0FBQztTQUNOOzs7V0ExQ1EsVUFBVSIsImZpbGUiOiJ0ZXh0bGludC1ydWxlLWhlbHBlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExJQ0VOU0UgOiBNSVRcblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBSdWxlSGVscGVyIGlzIGhlbHBlciBjbGFzcyBmb3IgdGV4dGxpbnQuXG4gKiBAY2xhc3MgUnVsZUhlbHBlclxuICovXG5leHBvcnQgY2xhc3MgUnVsZUhlbHBlciB7XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZSBSdWxlSGVscGVyIHdpdGggUnVsZUNvbnRleHQgb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7UnVsZUNvbnRleHR9IHJ1bGVDb250ZXh0IHRoZSBydWxlQ29udGV4dCBpcyBjb250ZXh0IG9iamVjdCBvZiB0aGUgcnVsZS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihydWxlQ29udGV4dCkge1xuICAgICAgICB0aGlzLnJ1bGVDb250ZXh0ID0gcnVsZUNvbnRleHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IHBhcmVudHMgb2Ygbm9kZS5cbiAgICAgKiBUaGUgcGFyZW50IG5vZGVzIGFyZSByZXR1cm5lZCBpbiBvcmRlciBmcm9tIHRoZSBjbG9zZXN0IHBhcmVudCB0byB0aGUgb3V0ZXIgb25lcy5cbiAgICAgKiB7QGxpbmsgbm9kZX0gaXMgbm90IGNvbnRhaW5lZCBpbiB0aGUgcmVzdWx0cy5cbiAgICAgKiBAcGFyYW0ge1R4dE5vZGV9IG5vZGUgdGhlIG5vZGUgaXMgc3RhcnQgcG9pbnQuXG4gICAgICogQHJldHVybnMge1R4dE5vZGVbXX1cbiAgICAgKi9cbiAgICBnZXRQYXJlbnRzKG5vZGUpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICB2YXIgcGFyZW50ID0gbm9kZS5wYXJlbnQ7XG4gICAgICAgIHdoaWxlIChwYXJlbnQgIT0gbnVsbCkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2gocGFyZW50KTtcbiAgICAgICAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdHJ1ZSBpZiBgbm9kZWAgaXMgd3JhcHBlZCBhbnkgb25lIG9mIG5vZGUge0BsaW5rIHR5cGVzfS5cbiAgICAgKiBAcGFyYW0ge1R4dE5vZGV9IG5vZGUgaXMgdGFyZ2V0IG5vZGVcbiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSB0eXBlcyBhcmUgd3JhcHBlZCB0YXJnZXQgbm9kZVxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIGlzQ2hpbGROb2RlKG5vZGUsIHR5cGVzKSB7XG4gICAgICAgIHZhciBwYXJlbnRzID0gdGhpcy5nZXRQYXJlbnRzKG5vZGUpO1xuICAgICAgICB2YXIgcGFyZW50c1R5cGVzID0gcGFyZW50cy5tYXAoZnVuY3Rpb24gKHBhcmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC50eXBlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHR5cGVzLnNvbWUoZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnRzVHlwZXMuc29tZShmdW5jdGlvbiAocGFyZW50VHlwZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYXJlbnRUeXBlID09PSB0eXBlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn0iXX0=