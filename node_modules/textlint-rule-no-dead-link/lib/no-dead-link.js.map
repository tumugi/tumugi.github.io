{"version":3,"sources":["../src/no-dead-link.js"],"names":[],"mappings":"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","file":"no-dead-link.js","sourcesContent":["import { RuleHelper } from 'textlint-rule-helper';\nimport fetch from 'isomorphic-fetch';\nimport URL from 'url';\n\nconst DEFAULT_OPTIONS = {\n  checkRelative: false,  // should check relative URLs.\n  baseURI: null,  // a base URI to resolve a relative URL.\n  ignore: [],  // URIs to be skipped from availability checks.\n};\n\n// http://stackoverflow.com/a/3809435/951517\n// eslint-disable-next-line max-len\nconst URI_REGEXP = /(https?:)?\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n\n/**\n * Returns `true` if a given URI is relative.\n * @param {string} uri\n * @return {Boolean}\n */\nfunction isRelative(uri) {\n  return URL.parse(uri).protocol === null;\n}\n\n/**\n * Checks if a given URI is alive or not.\n * @param {string} uri\n * @return {{ ok: bool, message: string }}\n */\nasync function isAlive(uri) {\n  try {\n    const opts = {\n      method: 'HEAD',\n      // Disable gzip compression in Node.js\n      // to avoid the zlib's \"unexpected end of file\" error\n      // https://github.com/request/request/issues/2045\n      compress: false,\n    };\n    const res = await fetch(uri, opts);\n\n    return {\n      ok: res.ok,\n      message: `${res.status} ${res.statusText}`,\n    };\n  } catch (err) {\n    return {\n      ok: false,\n      message: err.message,\n    };\n  }\n}\n\nfunction reporter(context, options = {}) {\n  const {\n    Syntax,\n    getSource,\n    report,\n    RuleError,\n  } = context;\n  const helper = new RuleHelper(context);\n  const opts = Object.assign({}, DEFAULT_OPTIONS, options);\n\n  /**\n   * Checks a given URI's availability and report if it is dead.\n   * @param {TextLintNode} node TextLintNode the URI belongs to.\n   * @param {string} uri a URI string to be linted.\n   * @param {number} index column number the URI is located at.\n   */\n  const lint = async ({ node, uri, index }) => {\n    if (opts.ignore.indexOf(uri) !== -1) {\n      return;\n    }\n\n    if (isRelative(uri)) {\n      if (!opts.checkRelative) {\n        return;\n      }\n\n      if (!opts.baseURI) {\n        const message = 'The base URI is not specified.';\n        report(node, new RuleError(message, { index: 0 }));\n        return;\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      uri = URL.resolve(opts.baseURI, uri);\n    }\n\n    const { ok, message: msg } = await isAlive(uri);\n\n    if (!ok) {\n      const message = `${uri} is dead. (${msg})`;\n      report(node, new RuleError(message, { index }));\n    }\n  };\n\n  /**\n   * URIs to be checked.\n   * @type {Array<{ node: TextLintNode, uri: string, index: number }>}\n   */\n  const URIs = [];\n\n  return {\n    [Syntax.Str](node) {\n      if (helper.isChildNode(node, [Syntax.BlockQuote])) {\n        return;\n      }\n\n      // prevent double checks\n      if (helper.isChildNode(node, [Syntax.Link])) {\n        return;\n      }\n\n      const text = getSource(node);\n      let matched;\n\n      // eslint-disable-next-line no-cond-assign\n      while ((matched = URI_REGEXP.exec(text))) {\n        const uri = matched[0];\n        const index = matched.index;\n        URIs.push({ node, uri, index });\n      }\n    },\n\n    [Syntax.Link](node) {\n      if (helper.isChildNode(node, [Syntax.BlockQuote])) {\n        return;\n      }\n\n      URIs.push({\n        node,\n        uri: node.url,\n        index: 0,\n      });\n    },\n\n    [`${context.Syntax.Document}:exit`]() {\n      return Promise.all(\n        URIs.map((item) => lint(item))\n      );\n    },\n  };\n}\n\nexport default {\n  linter: reporter,\n  fixer: reporter,\n};\n"]}