// LICENSE : MIT
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (context) {
    var _ref;

    var helper = new _textlintRuleHelper.RuleHelper(context);
    var Syntax = context.Syntax;
    var getSource = context.getSource;
    var RuleError = context.RuleError;
    var report = context.report;

    return _ref = {}, _defineProperty(_ref, Syntax.Str, function (node) {
        if (helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote])) {
            return;
        }
        // get text from node
        var text = getSource(node);
        // does text contain "todo:"?
        var match = text.match(/todo:/i);
        if (match) {
            var todoText = text.substring(match.index);
            report(node, new RuleError("Found TODO: '" + todoText + "'", {
                index: match.index
            }));
        }
    }), _defineProperty(_ref, Syntax.ListItem, function (node) {
        var text = context.getSource(node);
        var match = text.match(/\[\s+\]\s/i);
        if (match) {
            report(node, new context.RuleError("Found TODO: '" + text + "'", {
                index: match.index
            }));
        }
    }), _ref;
};

var _textlintRuleHelper = require("textlint-rule-helper");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
/**
 * @param {RuleContext} context
 */


module.exports = exports['default'];
//# sourceMappingURL=no-todo.js.map