'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _textlintRuleHelper = require('textlint-rule-helper');

var _writeGood = require('write-good');

var _writeGood2 = _interopRequireDefault(_writeGood);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function reporter(context) {
  var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
  var Syntax = context.Syntax;
  var getSource = context.getSource;
  var report = context.report;
  var RuleError = context.RuleError;

  var helper = new _textlintRuleHelper.RuleHelper(context);

  return _defineProperty({}, Syntax.Str, function (node) {
    if (helper.isChildNode(node, [Syntax.BlockQuote])) {
      return;
    }

    var text = getSource(node);
    var suggestions = (0, _writeGood2.default)(text, options);

    suggestions.forEach(function (suggestion) {
      var index = suggestion.index;
      var message = suggestion.reason;


      report(node, new RuleError(message, { index: index }));
    });
  });
}

exports.default = {
  linter: reporter,
  fixer: reporter
};
//# sourceMappingURL=write-good.js.map