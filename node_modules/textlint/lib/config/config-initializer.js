// LICENSE : MIT
"use strict";

var Promise = require("bluebird");
var fs = require("fs");
var path = require("path");
var Config = require("../config/config");
var Logger = require("../util/logger");
// Public Interface
/**
 * Initializer class for config of textlint.
 */
var init = {
    /**
     * Create .textlintrc file
     * @params {string} dir The directory of .textlintrc file
     * @returns {int} The exit code for the operation.
     */

    initializeConfig: function initializeConfig(dir) {
        var rcFile = "." + Config.CONFIG_FILE_NAME + "rc";
        var output = JSON.stringify({ "rules": {} }, null, 2);
        var filePath = path.resolve(dir, rcFile);
        try {
            if (fs.existsSync(filePath)) {
                throw new Error(rcFile + " is already existed.");
            }
            fs.writeFileSync(filePath, output);
        } catch (error) {
            Logger.error(error.message);
            return Promise.resolve(1);
        }
        return Promise.resolve(0);
    }
};
module.exports = init;
//# sourceMappingURL=config-initializer.js.map