{"version":3,"sources":["../../src/core/rule-creator-set.js"],"names":[],"mappings":";AACA;;;;;;;;AAEA;;;;;;AADA,IAAM,QAAQ,QAAQ,OAAR,EAAiB,2BAAjB,CAAd;;AAEA,IAAM,oBAAoB,SAApB,iBAAoB,CAAC,KAAD,EAAQ,WAAR,EAAwB;AAC9C,QAAM,cAAc,OAAO,MAAP,CAAc,IAAd,CAApB;AACA,WAAO,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,eAAO;AAC9B,YAAM,cAAc,MAAM,GAAN,CAApB;AACA,gDAAgB,WAAhB,EAA6B,GAA7B;;AAEA,YAAM,aAAa,eAAe,YAAY,GAAZ,CAAlC;AACA,YAAI,eAAe,KAAnB,EAA0B;AACtB,kBAAM,iBAAN,EAAyB,GAAzB;AACA,wBAAY,GAAZ,IAAmB,MAAM,GAAN,CAAnB;AACH;AACJ,KATD;AAUA,WAAO,WAAP;AACH,CAbD;;;;;;IAkBqB,c;;;;;;;AAMjB,aANiB,cAMjB,GAA0C;AAAA,YAA9B,KAA8B,yDAAtB,EAAsB;AAAA,YAAlB,WAAkB,yDAAJ,EAAI;;AAAA,8BANzB,cAMyB;;AACtC,aAAK,cAAL,GAAsB,KAAtB;AACA,aAAK,oBAAL,GAA4B,WAA5B;;AAEA,aAAK,KAAL,GAAa,kBAAkB,KAAK,cAAvB,EAAuC,KAAK,oBAA5C,CAAb;AACA,aAAK,SAAL,GAAiB,OAAO,IAAP,CAAY,KAAK,KAAjB,CAAjB;AACA,aAAK,WAAL,GAAmB,KAAK,oBAAxB;AACH;;iBAbgB,c;;wCAgBD;AAAA;;AACZ,mBAAO,KAAK,SAAL,CAAe,MAAf,CAAsB,oBAAY;AACrC,uBAAO,iCAAS,MAAK,KAAL,CAAW,QAAX,CAAT,CAAP;AACH,aAFM,CAAP;AAGH;;;iCAEQ,U,EAAY;AAAA;;AACjB,mBAAO,KAAK,aAAL,GAAqB,GAArB,CAAyB,oBAAY;AACxC,oBAAM,4BAAU,QAAV,EAAqB,OAAK,KAAL,CAAW,QAAX,CAArB,CAAN;AACA,oBAAM,kCAAgB,QAAhB,EAA2B,OAAK,WAAL,CAAiB,QAAjB,CAA3B,CAAN;AACA,uBAAO,WAAW,IAAI,cAAJ,CAAmB,KAAnB,EAA0B,WAA1B,CAAX,CAAP;AACH,aAJM,CAAP;AAKH;;;WA5BgB,c;;;kBAAA,c","file":"rule-creator-set.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst debug = require(\"debug\")(\"textlint:rule-creator-set\");\nimport {assertRuleShape, hasFixer} from \"./rule-creator-helper\";\nconst filterByAvailable = (rules, rulesConfig) => {\n    const resultRules = Object.create(null);\n    Object.keys(rules).forEach(key => {\n        const ruleCreator = rules[key];\n        assertRuleShape(ruleCreator, key);\n        // \"rule-name\" : false => disable\n        const ruleConfig = rulesConfig && rulesConfig[key];\n        if (ruleConfig !== false) {\n            debug(\"use \\\"%s\\\" rule\", key);\n            resultRules[key] = rules[key];\n        }\n    });\n    return resultRules;\n};\n\n/**\n * Manage RuleCreator*s* object and RuleOption*s*\n */\nexport default class RuleCreatorSet {\n    /**\n     * @param {Object} rules\n     * @param {Object} [rulesConfig]\n     * @constructor\n     */\n    constructor(rules = {}, rulesConfig = {}) {\n        this.rawRulesObject = rules;\n        this.rawRulesConfigObject = rulesConfig;\n        // initialize\n        this.rules = filterByAvailable(this.rawRulesObject, this.rawRulesConfigObject);\n        this.ruleNames = Object.keys(this.rules);\n        this.rulesConfig = this.rawRulesConfigObject;\n    }\n\n\n    getFixerNames() {\n        return this.ruleNames.filter(ruleName => {\n            return hasFixer(this.rules[ruleName]);\n        });\n    }\n\n    mapFixer(mapHandler) {\n        return this.getFixerNames().map(ruleName => {\n            const rules = {[ruleName]: this.rules[ruleName]};\n            const rulesConfig = {[ruleName]: this.rulesConfig[ruleName]};\n            return mapHandler(new RuleCreatorSet(rules, rulesConfig));\n        });\n    }\n}\n"]}