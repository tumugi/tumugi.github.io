{"version":3,"sources":["../../src/engine/rule-map.js"],"names":[],"mappings":";AACA;;;;;;;;AACA;;;;;;;;;;;;;;;;IAIqB,O;cAAA,O;;aAAA,O;8BAAA,O;;sEAAA,O;;;iBAAA,O;;;;;;;4CAKG;AAChB,mBAAO,KAAK,IAAL,GAAY,MAAZ,GAAqB,CAA5B;AACH;;;0CAEiB;AACd,mBAAO,KAAK,IAAL,EAAP;AACH;;;gCAEO,O,EAAS;AACb,mBAAO,KAAK,GAAL,CAAS,OAAT,CAAP;AACH;;;;;;;;sCAKa;AACV,mBAAO,KAAK,MAAL,EAAP;AACH;;;sCAEa,O,EAAS;AACnB,mBAAO,KAAK,GAAL,CAAS,OAAT,CAAP;AACH;;;;;;;;;mCAOU,O,EAAS,W,EAAa;AAC7B,iBAAK,GAAL,CAAS,OAAT,EAAkB,WAAlB;AACH;;;;;;;;qCAKY;AACT,iBAAK,KAAL;AACH;;;WA1CgB,O;;;kBAAA,O","file":"rule-map.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport MapLike from \"../shared/MapLike\";\n/**\n * @typedef {{key: Function}} RulesObject\n */\nexport default class RuleMap extends MapLike {\n    /**\n     * has rule at least one > 0\n     * @returns {boolean}\n     */\n    hasRuleAtLeastOne() {\n        return this.keys().length > 0;\n    }\n\n    getAllRuleNames() {\n        return this.keys();\n    }\n\n    getRule(ruleKey) {\n        return this.get(ruleKey);\n    }\n\n    /**\n     * @returns {RulesObject}\n     */\n    getAllRules() {\n        return this.toJSON();\n    }\n\n    isDefinedRule(ruleKey) {\n        return this.has(ruleKey);\n    }\n\n\n    /**\n     * @param {string} ruleKey\n     * @param ruleHandler\n     */\n    defineRule(ruleKey, ruleHandler) {\n        this.set(ruleKey, ruleHandler);\n    }\n\n    /**\n     * reset defined rules\n     */\n    resetRules() {\n        this.clear();\n    }\n}\n"]}