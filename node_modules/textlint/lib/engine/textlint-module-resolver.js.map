{"version":3,"sources":["../../src/engine/textlint-module-resolver.js"],"names":[],"mappings":"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","file":"textlint-module-resolver.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst assert = require(\"assert\");\nconst path = require(\"path\");\nconst tryResolve = require(\"try-resolve\");\nconst validateConfigConstructor = (ConfigConstructor) => {\n    assert(ConfigConstructor.CONFIG_PACKAGE_PREFIX &&\n        ConfigConstructor.RULE_NAME_PREFIX &&\n        ConfigConstructor.RULE_PRESET_NAME_PREFIX &&\n        ConfigConstructor.PLUGIN_NAME_PREFIX);\n};\n/**\n * This class aim to resolve textlint's package name and get the module path.\n *\n * Define\n *\n * - `package` is npm package\n * - `module` is package's main module\n *\n * ## Support\n *\n * - textlint-rule-*\n * - textlint-preset-*\n * - textlint-plugin-*\n * - textlint-config-*\n */\nexport default class TextLintModuleResolver {\n    /**\n     *\n     * @param {Config} ConfigConstructor config constructor like object\n     * It has static property like CONFIG_PACKAGE_PREFIX etc...\n     * @param {string} [baseDirectory]\n     * @constructor\n     */\n    constructor(ConfigConstructor, baseDirectory = \"\") {\n        validateConfigConstructor(ConfigConstructor);\n        /**\n         * @return {string} config package prefix\n         */\n        this.CONFIG_PACKAGE_PREFIX = ConfigConstructor.CONFIG_PACKAGE_PREFIX;\n        /**\n         * @return {string} rule package's name prefix\n         */\n        this.RULE_NAME_PREFIX = ConfigConstructor.RULE_NAME_PREFIX;\n        /**\n         * @return {string} rule preset package's name prefix\n         */\n        this.RULE_PRESET_NAME_PREFIX = ConfigConstructor.RULE_PRESET_NAME_PREFIX;\n        /**\n         * @return {string} plugins package's name prefix\n         */\n        this.PLUGIN_NAME_PREFIX = ConfigConstructor.PLUGIN_NAME_PREFIX;\n\n        /**\n         * @type {string} baseDirectory for resolving\n         */\n        this.baseDirectory = baseDirectory;\n    }\n\n    /**\n     * Take package name, and return path to module.\n     * @param {string} packageName\n     * @returns {string} return path to module\n     */\n    resolveRulePackageName(packageName) {\n        const baseDir = this.baseDirectory;\n        const PREFIX = this.RULE_NAME_PREFIX;\n        const fullPackageName = `${PREFIX}${packageName}`;\n        // <rule-name> or textlint-rule-<rule-name>\n        const pkgPath = tryResolve(path.join(baseDir, fullPackageName)) || tryResolve(path.join(baseDir, packageName));\n        if (!pkgPath) {\n            throw new ReferenceError(`Failed to load textlint's rule module: \"${packageName}\" is not found.\nSee FAQ: https://github.com/textlint/textlint/blob/master/docs/faq/failed-to-load-textlints-module.md\n`);\n        }\n        return pkgPath;\n    }\n\n    /**\n     * Take package name, and return path to module.\n     * @param {string} packageName\n     * @returns {string} return path to module\n     */\n    resolvePluginPackageName(packageName) {\n        const baseDir = this.baseDirectory;\n        const PREFIX = this.PLUGIN_NAME_PREFIX;\n        const fullPackageName = `${PREFIX}${packageName}`;\n        // <plugin-name> or textlint-plugin-<rule-name>\n        const pkgPath = tryResolve(path.join(baseDir, fullPackageName)) || tryResolve(path.join(baseDir, packageName));\n        if (!pkgPath) {\n            throw new ReferenceError(`Failed to load textlint's plugin module: \"${packageName}\" is not found.\nSee FAQ: https://github.com/textlint/textlint/blob/master/docs/faq/failed-to-load-textlints-module.md\n`);\n        }\n        return pkgPath;\n    }\n\n    /**\n     * Take package name, and return path to module.\n     * @param {string} packageName\n     * @returns {string} return path to module\n     */\n    resolvePresetPackageName(packageName) {\n        const baseDir = this.baseDirectory;\n        const PREFIX = this.RULE_PRESET_NAME_PREFIX;\n        const fullPackageName = `${PREFIX}${packageName}`;\n\n        /* Implementation Note\n        \n        preset name is defined in config file:\n        In the case, `packageName` is \"preset-gizmo\"\n        TextLintModuleResolver resolve \"preset-gizmo\" to \"textlint-rule-preset-gizmo\"\n\n        {\n            \"rules\": {\n                \"preset-gizmo\": {\n                    \"ruleA\": false\n                }\n            }\n        }\n         */\n        // <preset-name> or textlint-rule-preset-<rule-name>\n        const packageNameWithoutPreset = packageName.replace(/^preset\\-/, \"\");\n        const fullFullPackageName = `${PREFIX}${packageNameWithoutPreset}`;\n        // preset-<preset-name> or textlint-rule-preset-<preset-name>\n        const pkgPath = tryResolve(path.join(baseDir, fullFullPackageName)) ||\n            tryResolve(path.join(baseDir, packageNameWithoutPreset)) ||\n            // <preset-name> or textlint-rule-preset-<rule-name>\n            tryResolve(path.join(baseDir, fullPackageName)) ||\n            tryResolve(path.join(baseDir, packageName));\n        if (!pkgPath) {\n            throw new ReferenceError(`Failed to load textlint's preset module: \"${packageName}\" is not found.\nSee FAQ: https://github.com/textlint/textlint/blob/master/docs/faq/failed-to-load-textlints-module.md\n`);\n        }\n        return pkgPath;\n    }\n\n\n    /**\n     * Take Config package name, and return path to module.\n     * @param {string} packageName\n     * @returns {string} return path to module\n     */\n    resolveConfigPackageName(packageName) {\n        const baseDir = this.baseDirectory;\n        const PREFIX = this.CONFIG_PACKAGE_PREFIX;\n        const fullPackageName = `${PREFIX}${packageName}`;\n        // <plugin-name> or textlint-config-<rule-name>\n        const pkgPath = tryResolve(path.join(baseDir, fullPackageName)) || tryResolve(path.join(baseDir, packageName));\n        if (!pkgPath) {\n            throw new ReferenceError(`Failed to load textlint's config module: \"${packageName}\" is not found.\nSee FAQ: https://github.com/textlint/textlint/blob/master/docs/faq/failed-to-load-textlints-module.md\n`);\n        }\n        return pkgPath;\n    }\n}\n\n"]}