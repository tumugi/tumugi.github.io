{"version":3,"sources":["../../src/fixer/textlint-fixer.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAM,UAAU,QAAQ,UAAR,CAAhB;AACA,IAAM,KAAK,QAAQ,IAAR,CAAX;;;;AAIA,SAAS,eAAT,CAAyB,MAAzB,EAAiC;AAC7B,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,YAAM,iBAAiB,OAAO,QAA9B;AACA,YAAM,SAAS,OAAO,MAAtB;AACA,WAAG,SAAH,CAAa,cAAb,EAA6B,MAA7B,EAAqC,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACpD,gBAAI,KAAJ,EAAW;AACP,uBAAO,OAAO,KAAP,CAAP;AACH;AACD,oBAAQ,MAAR;AACH,SALD;AAMH,KATM,CAAP;AAUH;;IACoB,a;aAAA,a;8BAAA,a;;;iBAAA,a;;;;;;;;8BAMX,e,EAAiB;AACnB,gBAAM,WAAW,gBAAgB,GAAhB,CAAoB,eAApB,CAAjB;AACA,mBAAO,QAAQ,GAAR,CAAY,QAAZ,CAAP;AACH;;;WATgB,a;;;kBAAA,a","file":"textlint-fixer.js","sourcesContent":["const Promise = require(\"bluebird\");\nconst fs = require(\"fs\");\n/**\n * @param {TextLintResult} result\n */\nfunction overWriteResult(result) {\n    return new Promise((resolve, reject) => {\n        const targetFilePath = result.filePath;\n        const output = result.output;\n        fs.writeFile(targetFilePath, output, (error, result) => {\n            if (error) {\n                return reject(error);\n            }\n            resolve(result);\n        });\n    });\n}\nexport default class TextLintFixer {\n    /**\n     * write output to each files and return promise\n     * @param textFixMessages\n     * @returns {Promise}\n     */\n    write(textFixMessages) {\n        const promises = textFixMessages.map(overWriteResult);\n        return Promise.all(promises);\n    }\n}\n"]}