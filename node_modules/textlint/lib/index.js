// LICENSE : MIT
"use strict";

var _cli = require("./cli");

var _cli2 = _interopRequireDefault(_cli);

var _textlint = require("./textlint");

var _textlint2 = _interopRequireDefault(_textlint);

var _textlintEngine = require("./textlint-engine");

var _textlintEngine2 = _interopRequireDefault(_textlintEngine);

var _textfixEngine = require("./textfix-engine");

var _textfixEngine2 = _interopRequireDefault(_textfixEngine);

var _textlintCore = require("./textlint-core");

var _textlintCore2 = _interopRequireDefault(_textlintCore);

var _MessageType = require("./shared/type/MessageType");

var _MessageType2 = _interopRequireDefault(_MessageType);

var _SeverityLevel = require("./shared/type/SeverityLevel");

var _SeverityLevel2 = _interopRequireDefault(_SeverityLevel);

var _TextLintNodeType = require("./shared/type/TextLintNodeType");

var _TextLintNodeType2 = _interopRequireDefault(_TextLintNodeType);

var _throwLog = require("./util/throw-log");

var _logger = _interopRequireWildcard(_throwLog);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Level of abstraction(descending order)
// cli > TextLintEngine > TextLintCore(textlint)
// See: https://github.com/textlint/textlint/blob/master/docs/use-as-modules.md
module.exports = {
    // Command line interface
    cli: _cli2.default,
    // TextLintEngine is a wrapper around `textlint` for linting **multiple** files
    // include formatter, detecting utils
    // <Recommend>: It is easy to use
    // You can see engine/textlint-engine-core.js for more detail
    TextLintEngine: _textlintEngine2.default,
    // TextFixEngine is a wrapper around `textlint` for linting **multiple** files
    // include formatter, detecting utils
    // <Recommend>: It is easy to use
    // You can see engine/textlint-engine-core.js for more detail
    TextFixEngine: _textfixEngine2.default,
    // It is a singleton object of TextLintCore
    // Recommend: use TextLintCore
    textlint: _textlint2.default,
    // Core API for linting a **single** text or file.
    TextLintCore: _textlintCore2.default,
    // Constant Types
    TextLintMessageType: _MessageType2.default,
    TextLintMessageSeverityLevel: _SeverityLevel2.default,
    TextLintNodeType: _TextLintNodeType2.default,
    // for debug, don't use direct
    // It is used in textlint-tester
    _logger: _logger
};
//# sourceMappingURL=index.js.map