{"version":3,"sources":["../../src/shared/rule-severity.js"],"names":[],"mappings":";AACA;;;;;QAQgB,W,GAAA,W;;AANhB;;;;;;AADA,IAAM,SAAS,QAAQ,QAAR,CAAf;;;;;;;AAOO,SAAS,WAAT,CAAqB,UAArB,EAAiC;AACpC,QAAI,cAAc,IAAlB,EAAwB;AACpB,eAAO,wBAAc,KAArB;AACH;;AAED,QAAI,OAAO,UAAP,KAAsB,SAA1B,EAAqC;AACjC,eAAO,aAAa,wBAAc,KAA3B,GAAmC,wBAAc,IAAxD;AACH;AACD,QAAI,WAAW,QAAf,EAAyB;AACrB,eAAO,wBAAc,WAAW,QAAzB,MAAuC,SAA9C;AAIA,eAAO,wBAAc,WAAW,QAAzB,CAAP;AACH;AACD,WAAO,wBAAc,KAArB;AACH","file":"rule-severity.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst assert = require(\"assert\");\nimport SeverityLevel from \"./type/SeverityLevel\";\n/**\n * get severity level from ruleConfig.\n * @param {Object|boolean|undefined} ruleConfig\n * @returns {number}\n */\nexport function getSeverity(ruleConfig) {\n    if (ruleConfig == null) {\n        return SeverityLevel.error;\n    }\n    // rule:<true|false>\n    if (typeof ruleConfig === \"boolean\") {\n        return ruleConfig ? SeverityLevel.error : SeverityLevel.none;\n    }\n    if (ruleConfig.severity) {\n        assert(SeverityLevel[ruleConfig.severity] !== undefined, `please set\n\"rule-key\": {\n    \"severity\": \"<warning|error>\"\n}`);\n        return SeverityLevel[ruleConfig.severity];\n    }\n    return SeverityLevel.error;\n}\n"]}