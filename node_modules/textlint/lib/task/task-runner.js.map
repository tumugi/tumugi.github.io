{"version":3,"sources":["../../src/task/task-runner.js"],"names":[],"mappings":";AACA;;;;;;;;AACA;;;;;;;;IACqB,U;aAAA,U;8BAAA,U;;;iBAAA,U;;;;;;;;gCAMF,I,EAAM;AACjB,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,oBAAM,WAAW,EAAjB;AACA,qBAAK,EAAL,CAAQ,2BAAS,MAAT,CAAgB,OAAxB,EAAiC,mBAAW;AACxC,6BAAS,IAAT,CAAc,OAAd;AACH,iBAFD;AAGA,qBAAK,EAAL,CAAQ,2BAAS,MAAT,CAAgB,KAAxB,EAA+B,iBAAS;AACpC,2BAAO,KAAP;AACH,iBAFD;AAGA,qBAAK,EAAL,CAAQ,2BAAS,MAAT,CAAgB,QAAxB,EAAkC,YAAM;AACpC,yBAAK,kBAAL;AACA,4BAAQ,QAAR;AACH,iBAHD;AAIA,qBAAK,KAAL;AACH,aAbM,CAAP;AAcH;;;WArBgB,U;;;kBAAA,U","file":"task-runner.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport CoreTask from \"./textlint-core-task\";\nexport default class TaskRunner {\n    /**\n     * Task and return promise\n     * @param {TextLintCoreTask} task\n     * @returns {Promise}\n     */\n    static process(task) {\n        return new Promise((resolve, reject) => {\n            const messages = [];\n            task.on(CoreTask.events.message, message => {\n                messages.push(message);\n            });\n            task.on(CoreTask.events.error, error => {\n                reject(error);\n            });\n            task.on(CoreTask.events.complete, () => {\n                task.removeAllListeners();\n                resolve(messages);\n            });\n            task.start();\n        });\n    }\n}\n"]}