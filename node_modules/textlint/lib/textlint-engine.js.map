{"version":3,"sources":["../src/textlint-engine.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;;;;;AADA,IAAM,kBAAkB,QAAQ,oBAAR,CAAxB;;;;;;;IAMqB,c;;;;;;AAMjB,SANiB,cAMjB,CAAY,MAAZ,EAAoB;AAAA,0BANH,cAMG;;AAChB,QAAM,WAAW;;;;;AAKb,gBAAQ,gBAAC,YAAD,EAAkB;;;;;;;AAOtB,mBAAO,SAAS,aAAT,CAAuB,IAAvB,EAA6B;AAChC,uBAAO,aAAa,QAAb,CAAsB,IAAtB,CAAP;AACH,aAFD;AAGH,SAfY;;;;;AAoBb,gBAAQ,gBAAC,YAAD,EAAkB;;;;;;;;AAQtB,mBAAO,SAAS,aAAT,CAAuB,IAAvB,EAA6B,GAA7B,EAAkC;AACrC,uBAAO,aAAa,QAAb,CAAsB,IAAtB,EAA4B,GAA5B,CAAP;AACH,aAFD;AAGH,SA/BY;;;;AAmCb,kBAAU,kBAAC,eAAD,EAAqB;;AAE3B,gBAAI,CAAC,gBAAgB,aAArB,EAAoC;AAChC,gCAAgB,aAAhB,GAAgC,SAAhC;AACH;AACD,mBAAO,gBAAgB,eAAhB,CAAP;AACH;AAzCY,KAAjB;AA2CA,WAAO,iCAAuB,MAAvB,EAA+B,QAA/B,CAAP;AACH,C;;kBAnDgB,c","file":"textlint-engine.js","sourcesContent":["\"use strict\";\nconst createFormatter = require(\"textlint-formatter\");\nimport TextLintEngineCore from \"./engine/textlint-engine-core\";\n/**\n * TextLintEngine a adapter for TextLintEngineCore.\n * It aim to pull the whole look together. (TextLintEngine and TextFixEngine)\n */\nexport default class TextLintEngine {\n    /**\n     * TextLintEngine is a adaptor of TextLintEngineCore.\n     * @param {Config} config\n     * @returns {TextLintEngineCore}\n     */\n    constructor(config) {\n        const executor = {\n            /**\n             * @param {TextLintCore} textlintCore\n             * @returns {function()}\n             */\n            onFile: (textlintCore) => {\n                /**\n                 * Executes the current configuration on an array of file and directory names.\n                 * TextLintEngine#executeOnFile\n                 * @param {String[]}  files An array of file and directory names.\n                 * @returns {TextLintResult[]} The results for all files that were linted.\n                 */\n                return function executeOnFile(file) {\n                    return textlintCore.lintFile(file);\n                };\n            },\n            /**\n             * @param {TextLintCore} textlintCore\n             * @returns {function()}\n             */\n            onText: (textlintCore) => {\n                /**\n                 * lint text, and return TextLintResult[]\n                 * TextLintEngine#executeOnText\n                 * @param {string} text linting text content\n                 * @param {string} ext ext is a type for linting. default: \".txt\"\n                 * @returns {TextLintResult[]}\n                 */\n                return function executeOnText(text, ext) {\n                    return textlintCore.lintText(text, ext);\n                };\n            },\n            /**\n             * @param {TextLintFormatterOption} formatterConfig\n             */\n            onFormat: (formatterConfig) => {\n                // default formatter name: stylish\n                if (!formatterConfig.formatterName) {\n                    formatterConfig.formatterName = \"stylish\";\n                }\n                return createFormatter(formatterConfig);\n            }\n        };\n        return new TextLintEngineCore(config, executor);\n    }\n}\n"]}