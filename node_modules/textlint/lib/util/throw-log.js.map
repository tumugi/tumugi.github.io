{"version":3,"sources":["../../src/util/throw-log.js"],"names":[],"mappings":";AACA;;;;;QAIgB,a,GAAA,a;QAGA,c,GAAA,c;QAOA,wB,GAAA,wB;QASA,c,GAAA,c;AAtBhB,IAAM,eAAe,QAAQ,IAAR,CAAa,OAAb,CAAqB,gBAArB,MAA2C,CAAC,CAAjE;AACA,IAAI,mBAAmB,KAAvB;AACA,IAAI,sBAAsB,KAA1B;AACO,SAAS,aAAT,CAAuB,MAAvB,EAA+B;AAClC,uBAAmB,MAAnB;AACH;AACM,SAAS,cAAT,CAAwB,MAAxB,EAAgC;AACnC,0BAAsB,MAAtB;AACH;;;;;AAKM,SAAS,wBAAT,CAAkC,OAAlC,EAA2C;AAC9C,QAAI,oBAAoB,CAAC,YAAzB,EAAuC;AACnC,cAAM,MAAM,OAAN,CAAN;AACH;AACJ;;;;;AAKM,SAAS,cAAT,CAAwB,OAAxB,EAAiC;AACpC,QAAI,mBAAJ,EAAyB;AACrB,cAAM,MAAM,OAAN,CAAN;AACH;AACJ","file":"throw-log.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst experimental = process.argv.indexOf(\"--experimental\") !== -1;\nlet isRunningFromCLI = false;\nlet isRunningFromTester = false;\nexport function setRunningCLI(status) {\n    isRunningFromCLI = status;\n}\nexport function setRunningTest(status) {\n    isRunningFromTester = status;\n}\n/**\n * if current is not experimental, throw error message.\n * @param message\n */\nexport function throwWithoutExperimental(message) {\n    if (isRunningFromCLI && !experimental) {\n        throw Error(message);\n    }\n}\n/**\n * if current is in testing, throw error message.\n * @param {string} message\n */\nexport function throwIfTesting(message) {\n    if (isRunningFromTester) {\n        throw Error(message);\n    }\n}\n"]}