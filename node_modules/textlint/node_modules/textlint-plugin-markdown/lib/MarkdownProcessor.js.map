{"version":3,"sources":["../src/MarkdownProcessor.js"],"names":[],"mappings":";AACA;;;;;;;;;;;;IAEqB;AACjB,aADiB,iBACjB,CAAY,MAAZ,EAAoB;8BADH,mBACG;;AAChB,aAAK,MAAL,GAAc,MAAd,CADgB;KAApB;;iBADiB;;kCAkBP,KAAK;AACX,mBAAO;AACH,gDAAW,MAAM,UAAU;AACvB,2BAAO,0BAAM,IAAN,CAAP,CADuB;iBADxB;AAIH,kDAAY,UAAU,UAAU;AAC5B,2BAAO;AACH,0CADG;AAEH,kCAAU,WAAW,QAAX,GAAsB,YAAtB;qBAFd,CAD4B;iBAJ7B;aAAP,CADW;;;;8CAbc;AACzB,mBAAO,CACH,KADG,EAEH,WAFG,EAGH,QAHG,EAIH,OAJG,EAKH,MALG,EAMH,OANG,EAOH,SAPG,EAQH,MARG,CAAP,CADyB;;;;WALZ","file":"MarkdownProcessor.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {parse} from \"markdown-to-ast\";\nexport default class MarkdownProcessor {\n    constructor(config) {\n        this.config = config;\n    }\n\n    static availableExtensions() {\n        return [\n            \".md\",\n            \".markdown\",\n            \".mdown\",\n            \".mkdn\",\n            \".mkd\",\n            \".mdwn\",\n            \".mkdown\",\n            \".ron\"\n        ];\n    }\n\n    processor(ext) {\n        return {\n            preProcess(text, filePath) {\n                return parse(text);\n            },\n            postProcess(messages, filePath) {\n                return {\n                    messages,\n                    filePath: filePath ? filePath : \"<markdown>\"\n                };\n            }\n        };\n    }\n}\n"]}